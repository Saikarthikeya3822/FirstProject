spring.application.name=springdemo
# JPA and Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.default_schema=demo
# PostgreSQL configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/Dev
spring.datasource.username=postgres
spring.datasource.password=9398789744@Kk
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=10MB

#spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.springframework.orm.jpa=DEBUG

# application.properties
jwt.secret=jklLopvE/x/NhvbA9JtAqYBdZBGCh5Hb+0rj4XwBfJk=
jwt.expiration=1200000  # 2 minutes in milliseconds

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

# These placeholders are automatically resolved by Spring
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# Provider settings (these are defaults, but good to be explicit)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

